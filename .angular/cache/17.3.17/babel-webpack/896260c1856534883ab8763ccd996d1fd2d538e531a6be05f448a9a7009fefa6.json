{"ast":null,"code":"import { bootstrapApplication } from '@angular/platform-browser';\nimport { provideHttpClient, withInterceptorsFromDi, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app/app.component';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app/app.routes';\nimport { ApiInterceptor } from './app/services/api.interceptor';\nbootstrapApplication(AppComponent, {\n  providers: [provideRouter(routes), provideHttpClient(withInterceptorsFromDi()), {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ApiInterceptor,\n    multi: true\n  }]\n}).catch(err => console.error(err));","map":{"version":3,"names":["bootstrapApplication","provideHttpClient","withInterceptorsFromDi","HTTP_INTERCEPTORS","AppComponent","provideRouter","routes","ApiInterceptor","providers","provide","useClass","multi","catch","err","console","error"],"sources":["/Users/deryglazov/Documents/dev/ML/maltalist-angular/src/main.ts"],"sourcesContent":["import { bootstrapApplication } from '@angular/platform-browser';\nimport { provideHttpClient, withInterceptorsFromDi, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app/app.component';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app/app.routes';\nimport { ApiInterceptor } from './app/services/api.interceptor';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(withInterceptorsFromDi()),\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiInterceptor,\n      multi: true\n    }\n  ]\n}).catch(err => console.error(err));\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,iBAAiB,EAAEC,sBAAsB,EAAEC,iBAAiB,QAAQ,sBAAsB;AACnG,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,cAAc,QAAQ,gCAAgC;AAE/DP,oBAAoB,CAACI,YAAY,EAAE;EACjCI,SAAS,EAAE,CACTH,aAAa,CAACC,MAAM,CAAC,EACrBL,iBAAiB,CAACC,sBAAsB,EAAE,CAAC,EAC3C;IACEO,OAAO,EAAEN,iBAAiB;IAC1BO,QAAQ,EAAEH,cAAc;IACxBI,KAAK,EAAE;GACR;CAEJ,CAAC,CAACC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}