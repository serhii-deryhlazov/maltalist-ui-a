{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ApiInterceptor = /*#__PURE__*/(() => {\n  class ApiInterceptor {\n    constructor() {\n      this.API_BASE_URL = 'http://localhost/api';\n    }\n    intercept(req, next) {\n      // Add API base URL if the request doesn't already have a full URL\n      if (!req.url.startsWith('http')) {\n        const apiReq = req.clone({\n          url: `${this.API_BASE_URL}${req.url}`\n        });\n        return next.handle(apiReq);\n      }\n      return next.handle(req);\n    }\n    static {\n      this.ɵfac = function ApiInterceptor_Factory(t) {\n        return new (t || ApiInterceptor)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiInterceptor,\n        factory: ApiInterceptor.ɵfac\n      });\n    }\n  }\n  return ApiInterceptor;\n})();","map":{"version":3,"names":["ApiInterceptor","constructor","API_BASE_URL","intercept","req","next","url","startsWith","apiReq","clone","handle","factory","ɵfac"],"sources":["/Users/deryglazov/Documents/dev/ML/maltalist-angular/src/app/services/api.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n  private readonly API_BASE_URL = 'http://localhost/api';\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Add API base URL if the request doesn't already have a full URL\n    if (!req.url.startsWith('http')) {\n      const apiReq = req.clone({\n        url: `${this.API_BASE_URL}${req.url}`\n      });\n      return next.handle(apiReq);\n    }\n    return next.handle(req);\n  }\n}\n"],"mappings":";AAKA,WAAaA,cAAc;EAArB,MAAOA,cAAc;IAD3BC,YAAA;MAEmB,KAAAC,YAAY,GAAG,sBAAsB;;IAEtDC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;MAChD;MACA,IAAI,CAACD,GAAG,CAACE,GAAG,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;QAC/B,MAAMC,MAAM,GAAGJ,GAAG,CAACK,KAAK,CAAC;UACvBH,GAAG,EAAE,GAAG,IAAI,CAACJ,YAAY,GAAGE,GAAG,CAACE,GAAG;SACpC,CAAC;QACF,OAAOD,IAAI,CAACK,MAAM,CAACF,MAAM,CAAC;;MAE5B,OAAOH,IAAI,CAACK,MAAM,CAACN,GAAG,CAAC;IACzB;;;yBAZWJ,cAAc;MAAA;IAAA;;;eAAdA,cAAc;QAAAW,OAAA,EAAdX,cAAc,CAAAY;MAAA;IAAA;;SAAdZ,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}